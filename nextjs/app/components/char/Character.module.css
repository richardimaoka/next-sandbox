.component {
  display: grid;
  grid-template-areas: "center";
  position: relative;
  background-color: rgba(53, 52, 50, 0.8);

  padding-top: 20px;
  padding-bottom: 20px;
  padding-left: 20px;
  padding-right: 20px;
}

.component > * {
  grid-area: center;
}

@keyframes bg {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 0.3;
  }
  100% {
    opacity: 0;
  }
}

.bg {
  animation-name: bg;
  animation-duration: 1s;
  animation-fill-mode: forwards;

  /* to hide the text, set it transparent */
  color: rgba(0, 0, 0, 0);

  background-color: yellow;

  /* position center with respect to the parent grid container... */
  align-self: center;
  justify-self: center;
  /* ...then position: absolute to avoid affecting the size calculation of parent grid container */
  position: absolute;
  width: 2rem;
  height: 2rem;

  z-index: 1;
}

@keyframes stroke {
  from {
    transform: scale(1);
    opacity: 0.5;
  }
  to {
    transform: scale(1.3);
    opacity: 0;
  }
}

.stroke {
  animation-name: stroke;
  animation-duration: 1s;
  animation-fill-mode: forwards;

  /* to hide the text, set it transparent */
  color: rgba(0, 0, 0, 0);

  border-color: yellow;
  border-style: solid;
  border-width: 1px;
  opacity: 0;

  /* position center with respect to the parent grid container... */
  align-self: center;
  justify-self: center;
  /* ...then position: absolute to avoid affecting the size calculation of parent grid container */
  position: absolute;
  width: 2rem;
  height: 2rem;

  /* sent back with respect to content */
  z-index: 1;
}

.front {
  z-index: 2;
  color: white;
}
